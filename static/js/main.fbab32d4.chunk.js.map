{"version":3,"sources":["ImageFileNames.js","components/Navbar/Navbar.js","components/Banner/Banner.js","components/ImageBlock/ImageBlock.js","components/ImageBlockListing/ImageBlockListing.js","components/Footer/Footer.js","App.js","index.js"],"names":["ImageFileNames","Navbar","props","react_default","a","createElement","className","href","id","gameStatus","feedback","score","topScore","Banner","ImageBlock","src","process","imageFileName","alt","height","imageBlockHeight","width","imageBlockWidth","onClick","clickHandler","ImageBlockListing","imageFileNames","map","index","components_ImageBlock_ImageBlock","key","Footer","target","rel","App","state","clickedImages","handleClick","event","clickedImageFileName","_this","imageClickedBefore","setState","shuffle","newScore","length","clickedImagesCopy","slice","push","newTopScore","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","this","console","log","components_Navbar_Navbar","components_Banner_Banner","components_ImageBlockListing_ImageBlockListing","components_Footer_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fbab32d4.chunk.js","sourcesContent":["let ImageFileNames = [\n  \"stan.png\",\n  \"avery.png\",\n  \"brian.png\",\n  \"francine.png\",\n  \"clip-clop.png\",\n  \"haley.png\",\n  \"jeannie-gold.png\",\n  \"jeff.png\",\n  \"klaus.png\",\n  \"dr-penguin.png\",\n  \"roger.png\",\n  \"steve.png\"\n];\n\nexport default ImageFileNames;\n","import React from \"react\";\nimport \"./Navbar.css\";\n\nconst Navbar = props => (\n  <div className=\"bg-dark navbar-dark container-fluid text-center pt-1 pb-1\">\n    <div className=\"row\">\n      <div className=\"col-md-4\">\n        <h2>\n          <a href=\".\" className=\"text-white nounderline\" id=\"app-name\">\n            American Dad! Clicky Game\n          </a>\n        </h2>\n      </div>\n      <div\n        className={\n          \"col-md-4 \" +\n          (props.gameStatus === \"2\"\n            ? \" text-danger\"\n            : props.gameStatus === \"1\"\n            ? \" text-success\"\n            : \" text-info\")\n        }\n      >\n        <h3>{props.feedback}</h3>\n      </div>\n      <div className=\"col-md-4 text-muted\">\n        <h3>\n          Score: {props.score} | Top Score: {props.topScore}\n        </h3>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./Banner.css\";\n\nconst Banner = () => (\n  <div className=\"jumbotron jumbotron-fluid text-center\">\n    <div className=\"container\">\n      <div className=\"row\">\n        <div className=\"col-md-8 offset-md-2 offset-md-right-2\">\n          <h1>Clicky Game!</h1>\n          <h4>\n            Click on an image to earn a point, but don't click on the same image\n            more than once!\n          </h4>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Banner;\n","import React from \"react\";\nimport \"./ImageBlock.css\";\n\nconst ImageBlock = props => (\n  <img\n    className={\n      \"col-md-2 col-sm-2 col-xs-16 pb-4 imageBlock rounded-corners \" +\n      (props.gameStatus === \"2\"\n        ? \" gameLost\"\n        : props.gameStatus === \"1\"\n        ? \" gameWon\"\n        : \"\")\n    }\n    src={process.env.PUBLIC_URL + \"/images/\" + props.imageFileName}\n    alt={props.alt}\n    height={props.imageBlockHeight}\n    width={props.imageBlockWidth}\n    onClick={props.clickHandler}\n  />\n);\n\nexport default ImageBlock;\n","import React from \"react\";\nimport \"./ImageBlockListing.css\";\nimport ImageBlock from \"../ImageBlock\";\n\nconst ImageBlockListing = props => (\n  <div className=\"container\">\n    <div className=\"row\">\n      {props.imageFileNames.map((imageFileName, index) => {\n        return (\n          <ImageBlock\n            key={index}\n            imageFileName={imageFileName}\n            alt={imageFileName}\n            clickHandler={props.clickHandler}\n            gameStatus={props.gameStatus}\n          />\n        );\n      })}\n    </div>\n  </div>\n);\n\nexport default ImageBlockListing;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nconst Footer = () => (\n  <footer className=\"footer text-center\">\n    <span>\n      Clicky Game Â© 2019 Copyright:&nbsp;\n      <a\n        href=\"https://github.com/lhosley\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Lee Hosley\n      </a>\n    </span>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport ImageFileNames from \"./ImageFileNames\";\nimport Navbar from \"./components/Navbar\";\nimport Banner from \"./components/Banner\";\nimport ImageBlockListing from \"./components/ImageBlockListing\";\nimport Footer from \"./components/Footer\";\n\nclass App extends Component {\n  state = {\n    imageFileNames: ImageFileNames,\n    clickedImages: [],\n    score: 0,\n    topScore: 0,\n    feedback: \"Click an image to start the game!\",\n    gameStatus: 0 //gameStatus: 0 => game in progresss, 1 => game won, 2 => game lost\n  };\n\n  componentDidMount() {\n    this.setState(\n      {\n        imageFileNames: this.shuffle(this.state.imageFileNames)\n      },\n      () => {\n        console.log(\"Shuffled the images on game start\");\n      }\n    );\n  }\n\n  handleClick = event => {\n    const clickedImageFileName = event.target.alt;\n\n    const wasImageClickedBefore = this.imageClickedBefore(clickedImageFileName);\n    if (wasImageClickedBefore) {\n      this.setState(\n        {\n          imageFileNames: this.shuffle(this.state.imageFileNames),\n\n          clickedImages: [],\n          score: 0,\n          feedback: \"Game Over! You Guessed The Same Image Twice!\",\n          gameStatus: 2\n        },\n        () => {}\n      );\n    } else {\n      let newScore = this.state.score + 1;\n      if (newScore === this.state.imageFileNames.length) {\n        this.setState({\n          imageFileNames: this.shuffle(this.state.imageFileNames),\n\n          clickedImages: [],\n          score: 0,\n          topScore: newScore,\n          feedback: \"Congrats! You Have Guessed All Of The Images Correctly!\",\n          gameStatus: 1\n        });\n      } else {\n        const clickedImagesCopy = this.state.clickedImages.slice();\n        clickedImagesCopy.push(clickedImageFileName);\n        const newTopScore =\n          newScore > this.state.topScore ? newScore : this.state.topScore;\n        this.setState(\n          {\n            imageFileNames: this.shuffle(this.state.imageFileNames),\n\n            clickedImages: clickedImagesCopy,\n            score: newScore,\n            topScore: newTopScore,\n            feedback: \"Yes! You Guessed The Image Correctly!\",\n            gameStatus: 0\n          },\n          () => {}\n        );\n      }\n    }\n  };\n\n  imageClickedBefore = clickedImageFileName => {\n    for (let index = 0; index < this.state.clickedImages.length; index++) {\n      if (this.state.clickedImages[index] === clickedImageFileName) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  shuffle = array => {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n    return array;\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar\n          score={this.state.score}\n          topScore={this.state.topScore}\n          feedback={this.state.feedback}\n          gameStatus={this.state.gameStatus}\n        />\n        <Banner />\n        <ImageBlockListing\n          imageFileNames={this.state.imageFileNames}\n          clickHandler={this.handleClick}\n          gameStatus={this.state.gameStatus}\n        />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}